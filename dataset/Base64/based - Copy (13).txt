The term ketchup first appeared in 1682. Ketchup recipes began to appear in British and then American cookbooks in the 18th century. James Mease published the first known tomato ketchup recipe in 1812. In 1824, a ketchup recipe using tomatoes appeared in The Virginia Housewife an influential 19th-century cookbook written by Mary Randolph, Thomas Jefferson's cousin. Tomato ketchup was sold locally by farmers. Jonas Yerkes is credited as the first American to sell it in a bottle. By 1837, he had produced and distributed the condiment nationally. Shortly thereafter, other companies followed suit. F. & J. Heinz launched their tomato ketchup in 1876. American cooks also began to sweeten ketchup in the 19th century. The Webster's Dictionary of 1913 defined "catsup" as: "table sauce made from mushrooms, tomatoes, walnuts, etc. Also written as ketchup." As the century progressed, tomato ketchup began its ascent in popularity in the United States. Tomato ketchup was popular long before fresh tomatoes were. People were less hesitant to eat tomatoes as part of a highly processed product that had been cooked and infused with vinegar and spices.