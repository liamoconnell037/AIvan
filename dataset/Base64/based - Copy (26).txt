Part of the reason why math curriculum relies so heavily on memorization is the extremely abstract nature that concepts are often presented in. When teachers use big words like sine, cosine, tangent, derivatives, and pi that have no real meaning behind them, students are forced to memorize so that they can compensate for the lack of real understanding that they have over the subjects that they’re learning, leaving them inevitably confused when they forget what they memorized “though I vaguely remember hearing them from some teacher in a quiet, boring classroom. I couldn’t for the life of me figure out where all these supposedly simple things came from. like the area of a circle, or the pile of unexplained ‘trig identities’” Wilkes 7. As Wilkes later shares, “The elegance and beauty of our subject cannot be fully appreciated without a visceral understanding of the pre-formal conceptual dance by which mathematical concepts are created. This process is not nearly as difficult to explain as it may seem, but doing so requires a radical shift in the way we teach our subject. It requires that we include in our textbooks and lectures at least some of the false starts, mistakes, and dead ends that a normal human mind would first need before arriving at the modern” Wilkes 22. Math curriculum and concepts are so far removed from the world that created them that when experimenting with a new way of teaching the subject, teachers involved were interviewed on what they would want from a new curriculum “When asked about what she would want her students to know from the problem solving point of view, she replied: ‘Probably that math is based on real life’” Steinburg 11. In Scott Johnsen’s article, Improving Achievement and Attitude Through Cooperative Learning in Math Class, he mentioned specific things he did during his new experimental math class, “As documented in my personal teacher journal, a specific example of my learning to step back was a group activity involving the discovery of the Pythagorean Theorem. As the students drew three squares to represent the lengths of the sides of the right triangle, I listened to some of the discussions about trying to fit the two smaller squares inside the larger square. I thought this activity helped many of the students understand the concept much better than me just telling them that this is how it works” Johnsen 20. It’s irrational to expect someone to learn something without ever understanding it.
