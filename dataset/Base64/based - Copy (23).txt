Commercial tomato ketchup has an additive, usually xanthan gum, which gives the condiment a non-Newtonian, pseudoplastic or "shear thinning" property – more commonly known as thixotropic. This increases the viscosity of the ketchup considerably with a relatively small amount added—usually 0.5—which can make it difficult to pour from a container. However, the shear thinning property of the gum ensures that when a force is applied to the ketchup it will lower the viscosity enabling the sauce to flow. A common method to getting ketchup out of the bottle involves inverting the bottle and shaking it or hitting the bottom with the heel of the hand, which causes the ketchup to flow rapidly. Ketchup in plastic bottles can be additionally manipulated by squeezing the bottle, which also decreases the viscosity of the ketchup inside. Another technique involves inverting the bottle and forcefully tapping its upper neck with two fingers index and middle finger together. Specifically, with a Heinz ketchup glass bottle, one taps the 57 circle on the neck. This helps the ketchup flow by applying the correct shearing force. These techniques work because of how pseudoplastic fluids behave: their viscosity (resistance to flow) decreases with increasing shear rate. The faster the ketchup is sheared (by shaking or tapping the bottle), the more fluid it becomes. After the shear is removed the ketchup thickens to its original viscosity.